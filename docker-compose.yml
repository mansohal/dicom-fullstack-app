
services:
  db:
    image: mysql:5.7
    container_name: dicom-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: Forrestgump1
      MYSQL_DATABASE: dicomdb
      MYSQL_USER: manpreet
      MYSQL_PASSWORD: ehmeristorage1
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - dicom_network

  backend:
    build: ./backend
    container_name: dicom-backend
    restart: always
    depends_on:
      - db
    environment:
      DB_HOST: dicom-db  # âœ… Use Service Name, NOT 127.0.0.1
      DB_USER: manpreet
      DB_PASSWORD: ehmeristorage1
      DB_NAME: dicomdb
    volumes:
      - shared_uploads:/shared/uploads
    ports:
      - "0.0.0.0:4000:4000"
    working_dir: /app
    command: >
      sh -c "until nc -z dicom-db 3306; do sleep 3; done && node index.js"
    networks:
      - dicom_network

  flask:
    build: ./python-pydicom-ms
    container_name: dicom-flask
    restart: always
    depends_on:
      - backend
    ports:
      - "0.0.0.0:5001:5001"
    working_dir: /app
    volumes:
      - shared_uploads:/shared/uploads
    environment:
      - FLASK_ENV=production  # Ensures Flask runs properly in Docker
      - PYTHONUNBUFFERED=1    # Avoids buffering output in logs
    command: >
      sh -c "pip install -r requirements.txt && python app.py"
    networks:
      - dicom_network

  frontend:
    build: ./dicom-frontend
    container_name: dicom-frontend
    restart: always
    depends_on:
      - backend
    ports:
      - "0.0.0.0:3000:3000"
    volumes:
      - ./dicom-frontend:/app
    working_dir: /app
    command: >
      sh -c "npm install --legacy-peer-deps && npm start"
    networks:
      - dicom_network

networks:
  dicom_network:
    driver: bridge

volumes:
  db_data:
    driver: local
  shared_uploads:
    driver: local
